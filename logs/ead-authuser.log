{"@timestamp":"2024-03-11T17:21:07.016Z", "log.level": "INFO", "message":"HV000001: Hibernate Validator 6.2.0.Final", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"background-preinit","log.logger":"org.hibernate.validator.internal.util.Version"}
{"@timestamp":"2024-03-11T17:21:07.139Z", "log.level": "INFO", "message":"Starting AuthuserApplication using Java 11.0.12 on NoteAdMu with PID 18736 (C:\\Temp\\decoder-workspace\\EAD\\authuser\\target\\classes started by Adrian in C:\\Temp\\decoder-workspace\\EAD\\authuser)", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.ead.authuser.AuthuserApplication"}
{"@timestamp":"2024-03-11T17:21:07.180Z", "log.level": "INFO", "message":"The following profiles are active: dev", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.ead.authuser.AuthuserApplication"}
{"@timestamp":"2024-03-11T17:21:07.262Z", "log.level": "INFO", "message":"Fetching config from server at : http://localhost:8888", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.boot.context.config.ConfigDataLoader"}
{"@timestamp":"2024-03-11T17:21:07.262Z", "log.level": "INFO", "message":"Located environment: name=ead-authuser-service, profiles=[dev], label=null, version=557cef027234dacdc0a7b7d41787fbafec6d6cff, state=null", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.boot.context.config.ConfigDataLoader"}
{"@timestamp":"2024-03-11T17:21:09.297Z", "log.level": "INFO", "message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2024-03-11T17:21:09.687Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 373 ms. Found 2 JPA repository interfaces.", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2024-03-11T17:21:10.393Z", "log.level": "INFO", "message":"BeanFactory id=1f10b4bf-96b7-3527-a686-d272d795d6cb", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.cloud.context.scope.GenericScope"}
{"@timestamp":"2024-03-11T17:21:11.080Z", "log.level": "INFO", "message":"Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2acb1264' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker"}
{"@timestamp":"2024-03-11T17:21:11.106Z", "log.level": "INFO", "message":"Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker"}
{"@timestamp":"2024-03-11T17:21:12.389Z", "log.level": "INFO", "message":"Tomcat initialized with port(s): 8087 (http)", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer"}
{"@timestamp":"2024-03-11T17:21:12.411Z", "log.level": "INFO", "message":"Initializing ProtocolHandler [\"http-nio-8087\"]", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.apache.coyote.http11.Http11NioProtocol"}
{"@timestamp":"2024-03-11T17:21:12.413Z", "log.level": "INFO", "message":"Starting service [Tomcat]", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.apache.catalina.core.StandardService"}
{"@timestamp":"2024-03-11T17:21:12.413Z", "log.level": "INFO", "message":"Starting Servlet engine: [Apache Tomcat/9.0.52]", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.apache.catalina.core.StandardEngine"}
{"@timestamp":"2024-03-11T17:21:12.822Z", "log.level": "INFO", "message":"Initializing Spring embedded WebApplicationContext", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/ead-authuser]"}
{"@timestamp":"2024-03-11T17:21:12.822Z", "log.level": "INFO", "message":"Root WebApplicationContext: initialization completed in 5557 ms", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"}
{"@timestamp":"2024-03-11T17:21:13.978Z", "log.level": "INFO", "message":"HHH000204: Processing PersistenceUnitInfo [name: default]", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.hibernate.jpa.internal.util.LogHelper"}
{"@timestamp":"2024-03-11T17:21:14.147Z", "log.level": "INFO", "message":"HHH000412: Hibernate ORM core version 5.4.32.Final", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.hibernate.Version"}
{"@timestamp":"2024-03-11T17:21:14.686Z", "log.level": "INFO", "message":"HCANN000001: Hibernate Commons Annotations {5.1.2.Final}", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.hibernate.annotations.common.Version"}
{"@timestamp":"2024-03-11T17:21:14.910Z", "log.level": "INFO", "message":"HikariPool-1 - Starting...", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2024-03-11T17:21:15.227Z", "log.level": "INFO", "message":"HikariPool-1 - Start completed.", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2024-03-11T17:21:15.288Z", "log.level": "INFO", "message":"HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.hibernate.dialect.Dialect"}
{"@timestamp":"2024-03-11T17:21:17.028Z", "log.level": "INFO", "message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator"}
{"@timestamp":"2024-03-11T17:21:17.043Z", "log.level": "INFO", "message":"Initialized JPA EntityManagerFactory for persistence unit 'default'", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"}
{"@timestamp":"2024-03-11T17:21:20.549Z", "log.level": "INFO", "message":"Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@ddca64d, org.springframework.security.web.context.SecurityContextPersistenceFilter@16af0251, org.springframework.security.web.header.HeaderWriterFilter@1fb8b89e, org.springframework.security.web.authentication.logout.LogoutFilter@50ca509b, com.ead.authuser.configs.security.AuthenticationJwtFilter@119cd026, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@38c464df, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@65b51977, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5d39797a, org.springframework.security.web.session.SessionManagementFilter@22027e62, org.springframework.security.web.access.ExceptionTranslationFilter@5a7e2f07, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@f25176a]", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.security.web.DefaultSecurityFilterChain"}
{"@timestamp":"2024-03-11T17:21:21.307Z", "log.level": "WARN", "message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration"}
{"@timestamp":"2024-03-11T17:21:23.843Z", "log.level": "INFO", "message":"Eureka HTTP Client uses RestTemplate.", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration"}
{"@timestamp":"2024-03-11T17:21:24.138Z", "log.level": "WARN", "message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger"}
{"@timestamp":"2024-03-11T17:21:24.164Z", "log.level": "INFO", "message":"Exposing 2 endpoint(s) beneath base path '/actuator'", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
{"@timestamp":"2024-03-11T17:21:24.282Z", "log.level": "INFO", "message":"Setting initial instance status as: STARTING", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory"}
{"@timestamp":"2024-03-11T17:21:24.390Z", "log.level": "INFO", "message":"Initializing Eureka in region us-east-1", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:21:24.402Z", "log.level": "INFO", "message":"Resolving eureka endpoints via configuration", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver"}
{"@timestamp":"2024-03-11T17:21:24.448Z", "log.level": "INFO", "message":"Disable delta property : false", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:21:24.449Z", "log.level": "INFO", "message":"Single vip registry refresh property : null", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:21:24.449Z", "log.level": "INFO", "message":"Force full registry fetch : false", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:21:24.449Z", "log.level": "INFO", "message":"Application is null : false", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:21:24.449Z", "log.level": "INFO", "message":"Registered Applications size is zero : true", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:21:24.450Z", "log.level": "INFO", "message":"Application version is -1: true", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:21:24.450Z", "log.level": "INFO", "message":"Getting all instance registry info from the eureka server", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:21:24.822Z", "log.level": "INFO", "message":"The response status is 200", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:21:24.828Z", "log.level": "INFO", "message":"Starting heartbeat executor: renew interval is: 30", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:21:24.833Z", "log.level": "INFO", "message":"InstanceInfoReplicator onDemand update allowed rate per min is 4", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.InstanceInfoReplicator"}
{"@timestamp":"2024-03-11T17:21:24.842Z", "log.level": "INFO", "message":"Discovery Client initialized at timestamp 1710177684840 with initial instances count: 1", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:21:24.859Z", "log.level": "INFO", "message":"Registering application EAD-AUTHUSER-SERVICE with eureka with status UP", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry"}
{"@timestamp":"2024-03-11T17:21:24.861Z", "log.level": "INFO", "message":"Saw local status change event StatusChangeEvent [timestamp=1710177684861, current=UP, previous=STARTING]", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:21:24.865Z", "log.level": "INFO", "message":"DiscoveryClient_EAD-AUTHUSER-SERVICE/NoteAdMu:ead-authuser-service:8087: registering service...", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"DiscoveryClient-InstanceInfoReplicator-0","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:21:24.867Z", "log.level": "INFO", "message":"Starting ProtocolHandler [\"http-nio-8087\"]", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.apache.coyote.http11.Http11NioProtocol"}
{"@timestamp":"2024-03-11T17:21:24.915Z", "log.level": "INFO", "message":"Tomcat started on port(s): 8087 (http) with context path '/ead-authuser'", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer"}
{"@timestamp":"2024-03-11T17:21:24.917Z", "log.level": "INFO", "message":"Updating port to 8087", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration"}
{"@timestamp":"2024-03-11T17:21:25.076Z", "log.level": "INFO", "message":"DiscoveryClient_EAD-AUTHUSER-SERVICE/NoteAdMu:ead-authuser-service:8087 - registration status: 204", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"DiscoveryClient-InstanceInfoReplicator-0","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:21:25.726Z", "log.level": "INFO", "message":"Started AuthuserApplication in 22.52 seconds (JVM running for 25.998)", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.ead.authuser.AuthuserApplication"}
{"@timestamp":"2024-03-11T17:26:24.465Z", "log.level": "INFO", "message":"Resolving eureka endpoints via configuration", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"AsyncResolver-bootstrap-executor-0","log.logger":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver"}
{"@timestamp":"2024-03-11T17:31:24.467Z", "log.level": "INFO", "message":"Resolving eureka endpoints via configuration", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"AsyncResolver-bootstrap-executor-0","log.logger":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver"}
{"@timestamp":"2024-03-11T17:36:24.473Z", "log.level": "INFO", "message":"Resolving eureka endpoints via configuration", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"AsyncResolver-bootstrap-executor-0","log.logger":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver"}
{"@timestamp":"2024-03-11T17:41:24.479Z", "log.level": "INFO", "message":"Resolving eureka endpoints via configuration", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"AsyncResolver-bootstrap-executor-0","log.logger":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver"}
{"@timestamp":"2024-03-11T17:46:24.496Z", "log.level": "INFO", "message":"Resolving eureka endpoints via configuration", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"AsyncResolver-bootstrap-executor-0","log.logger":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver"}
{"@timestamp":"2024-03-11T17:49:35.691Z", "log.level": "INFO", "message":"Unregistering application EAD-AUTHUSER-SERVICE with eureka with status DOWN", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"SpringApplicationShutdownHook","log.logger":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry"}
{"@timestamp":"2024-03-11T17:49:35.695Z", "log.level": "INFO", "message":"Saw local status change event StatusChangeEvent [timestamp=1710179375694, current=DOWN, previous=UP]", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"SpringApplicationShutdownHook","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:49:35.697Z", "log.level": "INFO", "message":"DiscoveryClient_EAD-AUTHUSER-SERVICE/NoteAdMu:ead-authuser-service:8087: registering service...", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"DiscoveryClient-InstanceInfoReplicator-0","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:49:35.788Z", "log.level": "INFO", "message":"DiscoveryClient_EAD-AUTHUSER-SERVICE/NoteAdMu:ead-authuser-service:8087 - registration status: 204", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"DiscoveryClient-InstanceInfoReplicator-0","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:49:36.616Z", "log.level": "INFO", "message":"Closing JPA EntityManagerFactory for persistence unit 'default'", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"SpringApplicationShutdownHook","log.logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"}
{"@timestamp":"2024-03-11T17:49:36.697Z", "log.level": "INFO", "message":"HikariPool-1 - Shutdown initiated...", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"SpringApplicationShutdownHook","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2024-03-11T17:49:36.723Z", "log.level": "INFO", "message":"HikariPool-1 - Shutdown completed.", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"SpringApplicationShutdownHook","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2024-03-11T17:49:36.744Z", "log.level": "INFO", "message":"Shutting down DiscoveryClient ...", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"SpringApplicationShutdownHook","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:49:39.752Z", "log.level": "INFO", "message":"Unregistering ...", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"SpringApplicationShutdownHook","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:49:39.774Z", "log.level": "INFO", "message":"DiscoveryClient_EAD-AUTHUSER-SERVICE/NoteAdMu:ead-authuser-service:8087 - deregister  status: 200", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"SpringApplicationShutdownHook","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:49:39.799Z", "log.level": "INFO", "message":"Completed shut down of DiscoveryClient", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"SpringApplicationShutdownHook","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:53:48.560Z", "log.level": "INFO", "message":"HV000001: Hibernate Validator 6.2.0.Final", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"background-preinit","log.logger":"org.hibernate.validator.internal.util.Version"}
{"@timestamp":"2024-03-11T17:53:48.760Z", "log.level": "INFO", "message":"Starting AuthuserApplication using Java 11.0.12 on NoteAdMu with PID 15460 (C:\\Temp\\decoder-workspace\\EAD\\authuser\\target\\classes started by Adrian in C:\\Temp\\decoder-workspace\\EAD\\authuser)", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.ead.authuser.AuthuserApplication"}
{"@timestamp":"2024-03-11T17:53:48.834Z", "log.level": "INFO", "message":"The following profiles are active: dev", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.ead.authuser.AuthuserApplication"}
{"@timestamp":"2024-03-11T17:53:49.011Z", "log.level": "INFO", "message":"Fetching config from server at : http://localhost:8888", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.boot.context.config.ConfigDataLoader"}
{"@timestamp":"2024-03-11T17:53:49.011Z", "log.level": "INFO", "message":"Located environment: name=ead-authuser-service, profiles=[dev], label=null, version=557cef027234dacdc0a7b7d41787fbafec6d6cff, state=null", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.boot.context.config.ConfigDataLoader"}
{"@timestamp":"2024-03-11T17:53:54.467Z", "log.level": "INFO", "message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2024-03-11T17:53:55.577Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 1062 ms. Found 2 JPA repository interfaces.", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2024-03-11T17:53:57.370Z", "log.level": "INFO", "message":"BeanFactory id=1f10b4bf-96b7-3527-a686-d272d795d6cb", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.cloud.context.scope.GenericScope"}
{"@timestamp":"2024-03-11T17:53:59.278Z", "log.level": "INFO", "message":"Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3ca278bc' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker"}
{"@timestamp":"2024-03-11T17:53:59.350Z", "log.level": "INFO", "message":"Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker"}
{"@timestamp":"2024-03-11T17:54:02.145Z", "log.level": "INFO", "message":"Tomcat initialized with port(s): 8087 (http)", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer"}
{"@timestamp":"2024-03-11T17:54:02.172Z", "log.level": "INFO", "message":"Initializing ProtocolHandler [\"http-nio-8087\"]", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.apache.coyote.http11.Http11NioProtocol"}
{"@timestamp":"2024-03-11T17:54:02.173Z", "log.level": "INFO", "message":"Starting service [Tomcat]", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.apache.catalina.core.StandardService"}
{"@timestamp":"2024-03-11T17:54:02.174Z", "log.level": "INFO", "message":"Starting Servlet engine: [Apache Tomcat/9.0.52]", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.apache.catalina.core.StandardEngine"}
{"@timestamp":"2024-03-11T17:54:03.022Z", "log.level": "INFO", "message":"Initializing Spring embedded WebApplicationContext", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/ead-authuser]"}
{"@timestamp":"2024-03-11T17:54:03.022Z", "log.level": "INFO", "message":"Root WebApplicationContext: initialization completed in 14007 ms", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"}
{"@timestamp":"2024-03-11T17:54:06.021Z", "log.level": "INFO", "message":"HHH000204: Processing PersistenceUnitInfo [name: default]", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.hibernate.jpa.internal.util.LogHelper"}
{"@timestamp":"2024-03-11T17:54:06.314Z", "log.level": "INFO", "message":"HHH000412: Hibernate ORM core version 5.4.32.Final", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.hibernate.Version"}
{"@timestamp":"2024-03-11T17:54:07.080Z", "log.level": "INFO", "message":"HCANN000001: Hibernate Commons Annotations {5.1.2.Final}", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.hibernate.annotations.common.Version"}
{"@timestamp":"2024-03-11T17:54:07.647Z", "log.level": "INFO", "message":"HikariPool-1 - Starting...", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2024-03-11T17:54:07.965Z", "log.level": "INFO", "message":"HikariPool-1 - Start completed.", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2024-03-11T17:54:08.065Z", "log.level": "INFO", "message":"HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.hibernate.dialect.Dialect"}
{"@timestamp":"2024-03-11T17:54:11.221Z", "log.level": "INFO", "message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator"}
{"@timestamp":"2024-03-11T17:54:11.251Z", "log.level": "INFO", "message":"Initialized JPA EntityManagerFactory for persistence unit 'default'", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"}
{"@timestamp":"2024-03-11T17:54:21.158Z", "log.level": "INFO", "message":"Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@72216f0b, org.springframework.security.web.context.SecurityContextPersistenceFilter@539a50ea, org.springframework.security.web.header.HeaderWriterFilter@7d60a62f, org.springframework.security.web.authentication.logout.LogoutFilter@233b5c71, com.ead.authuser.configs.security.AuthenticationJwtFilter@554a4d18, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@28c06c3c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@45957b8f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3fa13835, org.springframework.security.web.session.SessionManagementFilter@4b76a0f4, org.springframework.security.web.access.ExceptionTranslationFilter@2220780d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@297840d7]", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.security.web.DefaultSecurityFilterChain"}
{"@timestamp":"2024-03-11T17:54:23.171Z", "log.level": "WARN", "message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration"}
{"@timestamp":"2024-03-11T17:54:27.825Z", "log.level": "INFO", "message":"Eureka HTTP Client uses RestTemplate.", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration"}
{"@timestamp":"2024-03-11T17:54:28.749Z", "log.level": "WARN", "message":"Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger"}
{"@timestamp":"2024-03-11T17:54:28.813Z", "log.level": "INFO", "message":"Exposing 2 endpoint(s) beneath base path '/actuator'", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
{"@timestamp":"2024-03-11T17:54:29.155Z", "log.level": "INFO", "message":"Setting initial instance status as: STARTING", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory"}
{"@timestamp":"2024-03-11T17:54:29.356Z", "log.level": "INFO", "message":"Initializing Eureka in region us-east-1", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:54:29.387Z", "log.level": "INFO", "message":"Resolving eureka endpoints via configuration", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver"}
{"@timestamp":"2024-03-11T17:54:29.543Z", "log.level": "INFO", "message":"Disable delta property : false", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:54:29.544Z", "log.level": "INFO", "message":"Single vip registry refresh property : null", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:54:29.544Z", "log.level": "INFO", "message":"Force full registry fetch : false", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:54:29.544Z", "log.level": "INFO", "message":"Application is null : false", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:54:29.544Z", "log.level": "INFO", "message":"Registered Applications size is zero : true", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:54:29.544Z", "log.level": "INFO", "message":"Application version is -1: true", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:54:29.544Z", "log.level": "INFO", "message":"Getting all instance registry info from the eureka server", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:54:30.342Z", "log.level": "INFO", "message":"The response status is 200", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:54:30.355Z", "log.level": "INFO", "message":"Starting heartbeat executor: renew interval is: 30", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:54:30.368Z", "log.level": "INFO", "message":"InstanceInfoReplicator onDemand update allowed rate per min is 4", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.InstanceInfoReplicator"}
{"@timestamp":"2024-03-11T17:54:30.412Z", "log.level": "INFO", "message":"Discovery Client initialized at timestamp 1710179670400 with initial instances count: 1", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:54:30.427Z", "log.level": "INFO", "message":"Registering application EAD-AUTHUSER-SERVICE with eureka with status UP", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry"}
{"@timestamp":"2024-03-11T17:54:30.434Z", "log.level": "INFO", "message":"Saw local status change event StatusChangeEvent [timestamp=1710179670434, current=UP, previous=STARTING]", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:54:30.445Z", "log.level": "INFO", "message":"DiscoveryClient_EAD-AUTHUSER-SERVICE/NoteAdMu:ead-authuser-service:8087: registering service...", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"DiscoveryClient-InstanceInfoReplicator-0","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:54:30.448Z", "log.level": "INFO", "message":"Starting ProtocolHandler [\"http-nio-8087\"]", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.apache.coyote.http11.Http11NioProtocol"}
{"@timestamp":"2024-03-11T17:54:30.571Z", "log.level": "INFO", "message":"Tomcat started on port(s): 8087 (http) with context path '/ead-authuser'", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer"}
{"@timestamp":"2024-03-11T17:54:30.575Z", "log.level": "INFO", "message":"Updating port to 8087", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration"}
{"@timestamp":"2024-03-11T17:54:31.032Z", "log.level": "INFO", "message":"DiscoveryClient_EAD-AUTHUSER-SERVICE/NoteAdMu:ead-authuser-service:8087 - registration status: 204", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"DiscoveryClient-InstanceInfoReplicator-0","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T17:54:31.649Z", "log.level": "INFO", "message":"Started AuthuserApplication in 48.341 seconds (JVM running for 51.382)", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"main","log.logger":"com.ead.authuser.AuthuserApplication"}
{"@timestamp":"2024-03-11T17:59:29.555Z", "log.level": "INFO", "message":"Resolving eureka endpoints via configuration", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"AsyncResolver-bootstrap-executor-0","log.logger":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver"}
{"@timestamp":"2024-03-11T18:04:29.570Z", "log.level": "INFO", "message":"Resolving eureka endpoints via configuration", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"AsyncResolver-bootstrap-executor-0","log.logger":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver"}
{"@timestamp":"2024-03-11T18:09:29.584Z", "log.level": "INFO", "message":"Resolving eureka endpoints via configuration", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"AsyncResolver-bootstrap-executor-0","log.logger":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver"}
{"@timestamp":"2024-03-11T18:14:29.592Z", "log.level": "INFO", "message":"Resolving eureka endpoints via configuration", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"AsyncResolver-bootstrap-executor-0","log.logger":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver"}
{"@timestamp":"2024-03-11T18:19:29.595Z", "log.level": "INFO", "message":"Resolving eureka endpoints via configuration", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"AsyncResolver-bootstrap-executor-0","log.logger":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver"}
{"@timestamp":"2024-03-11T18:22:35.515Z", "log.level": "INFO", "message":"Unregistering application EAD-AUTHUSER-SERVICE with eureka with status DOWN", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"SpringApplicationShutdownHook","log.logger":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry"}
{"@timestamp":"2024-03-11T18:22:35.517Z", "log.level": "INFO", "message":"Saw local status change event StatusChangeEvent [timestamp=1710181355517, current=DOWN, previous=UP]", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"SpringApplicationShutdownHook","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T18:22:35.518Z", "log.level": "INFO", "message":"DiscoveryClient_EAD-AUTHUSER-SERVICE/NoteAdMu:ead-authuser-service:8087: registering service...", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"DiscoveryClient-InstanceInfoReplicator-0","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T18:22:35.565Z", "log.level": "INFO", "message":"DiscoveryClient_EAD-AUTHUSER-SERVICE/NoteAdMu:ead-authuser-service:8087 - registration status: 204", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"DiscoveryClient-InstanceInfoReplicator-0","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T18:22:36.527Z", "log.level": "INFO", "message":"Closing JPA EntityManagerFactory for persistence unit 'default'", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"SpringApplicationShutdownHook","log.logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"}
{"@timestamp":"2024-03-11T18:22:36.599Z", "log.level": "INFO", "message":"HikariPool-1 - Shutdown initiated...", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"SpringApplicationShutdownHook","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2024-03-11T18:22:36.641Z", "log.level": "INFO", "message":"HikariPool-1 - Shutdown completed.", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"SpringApplicationShutdownHook","log.logger":"com.zaxxer.hikari.HikariDataSource"}
{"@timestamp":"2024-03-11T18:22:36.656Z", "log.level": "INFO", "message":"Shutting down DiscoveryClient ...", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"SpringApplicationShutdownHook","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T18:22:39.670Z", "log.level": "INFO", "message":"Unregistering ...", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"SpringApplicationShutdownHook","log.logger":"com.netflix.discovery.DiscoveryClient"}
{"@timestamp":"2024-03-11T18:22:43.767Z", "log.level": "INFO", "message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://serviceregistry:ead123@localhost:8761/eureka/} exception=I/O error on DELETE request for \"http://serviceregistry:ead123@localhost:8761/eureka/apps/EAD-AUTHUSER-SERVICE/NoteAdMu:ead-authuser-service:8087\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for \"http://serviceregistry:ead123@localhost:8761/eureka/apps/EAD-AUTHUSER-SERVICE/NoteAdMu:ead-authuser-service:8087\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)\r\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:184)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:177)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)\r\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:200)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1152)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1145)\r\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)\r\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)\r\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)\r\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:131)\r\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\r\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:100)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:109)\r\n\tat org.springframework.http.client.support.BasicAuthenticationInterceptor.intercept(BasicAuthenticationInterceptor.java:79)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 39 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.base/java.net.PlainSocketImpl.connect0(Native Method)\r\n\tat java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)\r\n\tat java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)\r\n\tat java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)\r\n\tat java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.base/java.net.Socket.connect(Socket.java:608)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 58 more\r\n", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"SpringApplicationShutdownHook","log.logger":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient"}
{"@timestamp":"2024-03-11T18:22:43.769Z", "log.level": "WARN", "message":"Request execution failed with message: I/O error on DELETE request for \"http://serviceregistry:ead123@localhost:8761/eureka/apps/EAD-AUTHUSER-SERVICE/NoteAdMu:ead-authuser-service:8087\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"SpringApplicationShutdownHook","log.logger":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient"}
{"@timestamp":"2024-03-11T18:22:47.861Z", "log.level": "INFO", "message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://serviceregistry:ead123@localhost:8761/eureka/}, exception=I/O error on DELETE request for \"http://serviceregistry:ead123@localhost:8761/eureka/apps/EAD-AUTHUSER-SERVICE/NoteAdMu:ead-authuser-service:8087\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for \"http://serviceregistry:ead123@localhost:8761/eureka/apps/EAD-AUTHUSER-SERVICE/NoteAdMu:ead-authuser-service:8087\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)\r\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)\r\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)\r\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)\r\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:184)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:177)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)\r\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:200)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1152)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1145)\r\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)\r\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)\r\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)\r\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:131)\r\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\r\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:100)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\nCaused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)\r\n\tat org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)\r\n\tat org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)\r\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)\r\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)\r\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)\r\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\r\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:109)\r\n\tat org.springframework.http.client.support.BasicAuthenticationInterceptor.intercept(BasicAuthenticationInterceptor.java:79)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)\r\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)\r\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\r\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)\r\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)\r\n\t... 40 more\r\nCaused by: java.net.ConnectException: Connection refused: connect\r\n\tat java.base/java.net.PlainSocketImpl.connect0(Native Method)\r\n\tat java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)\r\n\tat java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)\r\n\tat java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)\r\n\tat java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.base/java.net.Socket.connect(Socket.java:608)\r\n\tat org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)\r\n\tat org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)\r\n\t... 59 more\r\n", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"SpringApplicationShutdownHook","log.logger":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient"}
{"@timestamp":"2024-03-11T18:22:47.862Z", "log.level": "WARN", "message":"Request execution failed with message: I/O error on DELETE request for \"http://serviceregistry:ead123@localhost:8761/eureka/apps/EAD-AUTHUSER-SERVICE/NoteAdMu:ead-authuser-service:8087\": Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"SpringApplicationShutdownHook","log.logger":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient"}
{"@timestamp":"2024-03-11T18:22:47.863Z", "log.level":"ERROR", "message":"DiscoveryClient_EAD-AUTHUSER-SERVICE/NoteAdMu:ead-authuser-service:8087 - de-registration failedCannot execute request on any known server", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"SpringApplicationShutdownHook","log.logger":"com.netflix.discovery.DiscoveryClient","error.type":"com.netflix.discovery.shared.transport.TransportException","error.message":"Cannot execute request on any known server","error.stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\r\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)\r\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:184)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:177)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)\r\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:200)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1152)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1145)\r\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)\r\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)\r\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)\r\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:131)\r\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\r\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:100)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n"}
{"@timestamp":"2024-03-11T18:22:47.875Z", "log.level": "INFO", "message":"Completed shut down of DiscoveryClient", "ecs.version": "1.2.0","service.name":"my-app","service.node.name":"my-app-cluster-node","event.dataset":"my-app","process.thread.name":"SpringApplicationShutdownHook","log.logger":"com.netflix.discovery.DiscoveryClient"}
